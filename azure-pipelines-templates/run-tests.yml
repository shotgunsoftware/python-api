parameters:
  name: ''
  vm_image: ''
  # ciServer: ''
  # ciScriptName: ''
  # ciScriptKey: ''
  project_name: ''


jobs:
- job: ${{ parameters.name }}
  pool: 
    vmImage: ${{ parameters.vm_image }}
  strategy:
    matrix:
      Python27:
        python.version: '2.7'
      Python37:
        python.version: '3.7'

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
      addToPath: True
  - script: |
      python -m pip install --upgrade pip setuptools wheel
      python -m pip install -r tests/ci_requirements.txt
    displayName: Install tools
  - bash: |
      cp ./tests/example_config ./tests/config
      pytest -v --cov shotgun_api3 --cov-report xml --test-run-title="${{parameters.name}}-$(python.version)"
    displayName: Running tests
    env:
      SG_SERVER_URL: $(ci_site)
      SG_SCRIPT_NAME: $(ci_site_script_name)
      SG_API_KEY: $(ci_site_script_key)
      # The unit tests manipulate the user and project during the tests, which can cause collisions,
      # so sandbox each build variant.
      # This will give a login like 'something-macOS-2.7'
      SG_HUMAN_LOGIN: $(python_api_human_login)-${{parameter.name}}-${python.version}
      # This will give a login like 'something macOS 2.7'
      SG_HUMAN_NAME: $(python_api_human_name) ${{parameter.name}} ${python.version}
      SG_HUMAN_PASSWORD: $(python_api_human_password)
      # This will give a name like 'Python API CI - macOS - 2.7'
      SG_PROJECT_NAME: ${{ format('Python API CI - {0}', parameters.name) }} - $(python.version)
  - script: |
      bash <(curl https://codecov.io/bash) -t $(python_api_codecov_token) -f coverage.xml -F adder -F subtractor
    displayName: 'Uploading code coverage to codecov'
